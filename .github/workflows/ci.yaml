name: Catch and Flow

on: [ push, pull_request ]

jobs:
  rustfmt:
    name: rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt
          override: true
      - name: rustfmt check
        run: cargo fmt --all -- --check --config-path=./.cargo-husky/hooks/rustfmt.toml

  clippy:
    name: clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
          override: true
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --jobs=11 -- --deny warnings

  test:
    name: "Test: { target: ${{ matrix.os }}, channel: ${{ matrix.rust }} }"
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        rust: [ stable, nightly ]
        include:
          - os: ubuntu-latest
            target: unknown-linux-musl
            sccache-path: /home/runner/.cache/sccache
          - os: macos-latest
            target: apple-darwin
            sccache-path: /Users/runner/Library/Caches/Mozilla.sccache
          # - os: windows-latest
          #   sccache-path: /Users/runner/Library/Caches/Mozilla.sccache

    env:
      RUST_BACKTRACE: full
      RUSTC_WRAPPER: sccache
      RUSTV: ${{ matrix.rust }}
      SCCACHE_CACHE_SIZE: 2G
      SCCACHE_DIR: ${{ matrix.sccache-path }}
      # SCCACHE_RECACHE: 1 # Uncomment this to clear cache, then comment it back out

    steps:
      - uses: actions/checkout@v2

      - name: Setup Rust ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true

      - name: Install sccache
        env:
          LINK: https://github.com/mozilla/sccache/releases/download
          SCCACHE_VERSION: 0.3.0
        run: |
          SCCACHE_FILE=sccache-v$SCCACHE_VERSION-x86_64-${{ matrix.target }}
          mkdir -p $HOME/.local/bin
          curl -L "$LINK/v$SCCACHE_VERSION/$SCCACHE_FILE.tar.gz" | tar xz
          mv -f $SCCACHE_FILE/sccache $HOME/.local/bin/sccache
          chmod +x $HOME/.local/bin/sccache
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Start sccache server
        run: sccache --start-server

      - name: Run test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release --all-features
        continue-on-error: ${{ matrix.rust == 'nightly' }}

      - name: Print sccache stats
        run: sccache --show-stats
      - name: Stop sccache server
        run: sccache --stop-server || true

      - name: Cache cargo registry
        uses: actions/cache@v2
        continue-on-error: false
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git            
            ~/.cargo/registry/index/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
                        ${{ runner.os }}-cargo-
      - name: Save sccache
        uses: actions/cache@v2
        continue-on-error: false
        with:
          path: ${{ matrix.sccache-path }}
          key: ${{ runner.os }}-sccache-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
                        ${{ runner.os }}-sccache-
